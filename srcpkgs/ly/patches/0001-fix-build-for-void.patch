diff --git a/build.zig b/build.zig
index c7cb249..0a51a95 100644
--- a/build.zig
+++ b/build.zig
@@ -41,6 +41,7 @@ pub fn build(b: *std.Build) !void {
     const version_str = try getVersionStr(b, "ly", ly_version);
     const enable_x11_support = b.option(bool, "enable_x11_support", "Enable X11 support (default is on)") orelse true;
     const default_tty = b.option(u8, "default_tty", "Set the TTY (default is 2)") orelse 2;
+    const pie = b.option(bool, "pie", "Build a Position Independent Executable") orelse false;
 
     default_tty_str = try std.fmt.allocPrint(b.allocator, "{d}", .{default_tty});
 
@@ -60,6 +61,8 @@ pub fn build(b: *std.Build) !void {
         .optimize = optimize,
     });
 
+    exe.pie = pie;
+
     const zigini = b.dependency("zigini", .{ .target = target, .optimize = optimize });
     exe.root_module.addImport("zigini", zigini.module("zigini"));
 
@@ -140,20 +143,6 @@ fn install_ly(allocator: std.mem.Allocator, patch_map: PatchMap, install_config:
         std.debug.print("warn: {s} already exists as a directory.\n", .{ly_lang_path});
     };
 
-    {
-        const exe_path = try std.fs.path.join(allocator, &[_][]const u8{ dest_directory, prefix_directory, "/bin" });
-        std.fs.cwd().makePath(exe_path) catch {
-            if (!std.mem.eql(u8, dest_directory, "")) {
-                std.debug.print("warn: {s} already exists as a directory.\n", .{exe_path});
-            }
-        };
-
-        var executable_dir = std.fs.cwd().openDir(exe_path, .{}) catch unreachable;
-        defer executable_dir.close();
-
-        try installFile("zig-out/bin/ly", executable_dir, exe_path, executable_name, .{});
-    }
-
     {
         var config_dir = std.fs.cwd().openDir(ly_config_directory, .{}) catch unreachable;
         defer config_dir.close();
